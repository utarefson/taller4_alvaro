@using BlazorPoPupDemo_Server.Data
@using BlazorPoPupDemo_Server.Models
@using System.Text
@inject NavigationManager uriHelper;
<div class="card" style="padding: 1rem;box-shadow: 0 3px 5px rgba(0,0,0,.20);width: 500px;margin: auto;border-radius:8px;background-color:@Note.Color.HexCode">
    <input type="text" style="margin: 3px;border-color: transparent;background-color:@Note.Color.HexCode" class="form-control" @bind="Note.Title"   placeholder="Title">
    <input type="text" style="margin: 3px;border-color: transparent;background-color:@Note.Color.HexCode" class="form-control" @bind="Note.Content" placeholder="Take a note...">
    <div class="row">
        <div class="col-9"></div>
        <div class="col-3" style="cursor: pointer"  @onclick="@(() => SaveNote())" ><h5 style="font-size: 0.7rem;font-weight: bold;"> SAVE CHANGES</h5></div>
    </div>
</div>
<div class="row" style="width: 200px;box-shadow: 0 3px 5px rgb(0 0 0 / 20%);border: 1px solid transparent;border-radius:8px;
    margin: auto;padding: 5px 5px 5px 11px;    margin-top: -20px;
    position: relative;
    background-color: white;">
    <div class="col-2 "  @onclick="@(() => ChangeColor("#f28b82"))" style="padding: 0;cursor: pointer"><h1 class="circle c1"></h1></div>
    <div class="col-2 "  @onclick="@(() => ChangeColor("#fbbc04"))"  style="padding: 0;cursor: pointer"><h1 class="circle c2"></h1></div>
    <div class="col-2 "  @onclick="@(() => ChangeColor("#fff475"))"  style="padding: 0;cursor: pointer"><h1 class="circle c3"></h1></div>
    <div class="col-2 "  @onclick="@(() => ChangeColor("#ccff90"))"  style="padding: 0;cursor: pointer"><h1 class="circle c4"></h1></div>
    <div class="col-2 "  @onclick="@(() => ChangeColor("#a7ffeb"))"  style="padding: 0;cursor: pointer"><h1 class="circle c5"></h1></div>
    <div class="col-2 "  @onclick="@(() => ChangeColor("#aecbfa"))"  style="padding: 0;cursor: pointer"><h1 class="circle c6"></h1></div>
</div>

@code {
    [Parameter] public Note Note{get;set;}
    [Parameter] public int Index{get;set;}
    public List<Color> Colors{ get; set; }
    public List<Color> GetColors()
    {
        ServiceDrive service = new ServiceDrive();
        Colors = new List<Color>();
        Data data = service.ListFiles();
        if (data == null) 
        {
            return new List<Color>();
        }
        Colors = data.Colors;
        return data.Colors;
    }
    public void ChangeColor(string color)
    {
        Note.Color.HexCode = color;
    }
    public void SaveNote()
    {
        if (Note.Title.Equals(""))
        {
            return;
        }
        if (Note.Content.Equals(""))
        {
            return;
        }
        ServiceDrive service = new ServiceDrive();
        Data data = service.ListFiles();
        if (data != null)
        {
            if (Index == -1)//to create 
            {
                data.Notes.Add(Note);
            }
            else
            {//to update
                data.Notes[Index] = Note;
            }
            DataResponse response = service.UpdateList(data);
            if (response.StatusCod == 200)
            {
                uriHelper.NavigateTo("/", forceLoad: true);
            }
        }
    }
}
