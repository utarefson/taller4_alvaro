@inject IModalService modal
@using BlazorPoPupDemo_Server.Data
@using BlazorPoPupDemo_Server.Models
@using Blazorise
@inject NavigationManager uriHelper;
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet"/>
<div class="page-content container note-has-grid"  style="background:#edf1f5">
    <AuthorizeView>
    <Authorized>
       <div class="tab-content bg-transparent">
        <div id="note-full-container" class="note-has-grid row">
             @foreach (var item in GetListFiles() )
            {  
                <div class="col-md-4 single-note-item all-category note-business DeleteNote" style="padding: 1rem;">
                    <div class="card card-body" style="background:@item.Color.HexCode;border-radius: 8px;">
                        <span class="side-stick"></span>
                        <h5 style="font-size: 1rem;font-weight: 600;">@item.Title</h5>
                        <h5 style="font-size: 1rem;font-weight: 100;">
                            @item.Content
                        </h5>
                        <div class="row">
                            <div class="col-7"></div>
                            <div class="col-1" style="cursor: pointer" @onclick="@(() => EditNoteModal(@item))" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M20.41 4.94l-1.35-1.35c-.78-.78-2.05-.78-2.83 0L13.4 6.41 3 16.82V21h4.18l10.46-10.46 2.77-2.77c.79-.78.79-2.05 0-2.83zm-14 14.12L5 19v-1.36l9.82-9.82 1.41 1.41-9.82 9.83z"></path></svg></div>
                            <div class="col-1" style="cursor: pointer"  @onclick="@(() => ChangeLocationNote(@item,3))" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 0 1 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z"></path></svg></div>
                            <div class="col-1" style="cursor: pointer" @onclick="@(() => ChangeLocationNote(@item,1))" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z"></path></svg></div>
                        </div>
                    </div>
                </div>             
            }          
        </div>
    </div>
    </Authorized>
    <NotAuthorized>      
        <p> Sin registro</p>  
    </NotAuthorized>  
</AuthorizeView>
</div>
@code {
    public IList<Note> GetListFiles()
    {
        ServiceDrive service = new ServiceDrive();
        Data data = service.ListFiles();
        if (data == null)
        {
            return new List<Note>();
        }
        IList<Note> list = new List<Note>();
        foreach (var item in data.Notes)
        {
            if (item.Remove == 1)
            {
                list.Add(item);
            }
        }
        return list;
    }
    public void ChangeLocationNote(Note note,int change)
    {
        if (change == 3) 
        {
            note.Archived = 0;
            note.Remove = 0;
        }
        if (change == 1) 
        {
            note.Remove = 0;
            note.Archived = 1;
        }
        ServiceDrive service = new ServiceDrive();
        Data data = service.ListFiles();
        if (data != null)
        {
            data.Notes[note.Id] = note;
            DataResponse response = service.UpdateList(data);
            if (response.StatusCod == 200)
            {
                uriHelper.NavigateTo("/removes", forceLoad: true);
            }
        }
    }
    public void EditNoteModal(Note note)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(EditNote.Note), note);
        parameters.Add(nameof(EditNote.Index), note.Id);
        modal.Show<EditNote>("", parameters);
    }
}
