@inject NavigationManager uriHelper;
@using BlazorPoPupDemo_Server.Data
@using BlazorPoPupDemo_Server.Models
 <AuthorizeView>
    <Authorized>
       <div class="card" style="padding: 1rem;box-shadow: 0 3px 5px rgba(0,0,0,.20);width: 500px;margin: auto;border: 1px solid transparent;border-radius:8px;background-color:@ColorSelected">
            <input type="text" style="margin: 3px;border-color: transparent;background-color:@ColorSelected" class="form-control" @bind="Name"   placeholder="Title">
            <input type="text" style="margin: 3px;border-color: transparent;background-color:@ColorSelected" class="form-control" @bind="Content" placeholder="Take a note...">
            <div class="row">
                <div class="col-10"></div>
                <div class="col-1" style="cursor: pointer" @onclick="@(() => SaveNote(true))" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z"></path></svg></div>
                <div class="col-1" style="cursor: pointer"  @onclick="@(() => SaveNote(false))" ><span class="oi oi-plus" aria-hidden="true"></span></div>
            </div>
        </div>
        <div class="row" style="width: 200px;box-shadow: 0 3px 5px rgb(0 0 0 / 20%);border: 1px solid transparent;border-radius:8px;
            margin: auto;padding: 5px 5px 5px 11px;    margin-top: -20px;
            position: absolute;
            left: 50%;
            background-color: white;">
            <div class="col-2 "  @onclick="@(() => ChangeColor("#f28b82"))" style="padding: 0;cursor: pointer"><h1 class="circle c1"></h1></div>
            <div class="col-2 "  @onclick="@(() => ChangeColor("#fbbc04"))"  style="padding: 0;cursor: pointer"><h1 class="circle c2"></h1></div>
            <div class="col-2 "  @onclick="@(() => ChangeColor("#fff475"))"  style="padding: 0;cursor: pointer"><h1 class="circle c3"></h1></div>
            <div class="col-2 "  @onclick="@(() => ChangeColor("#ccff90"))"  style="padding: 0;cursor: pointer"><h1 class="circle c4"></h1></div>
            <div class="col-2 "  @onclick="@(() => ChangeColor("#a7ffeb"))"  style="padding: 0;cursor: pointer"><h1 class="circle c5"></h1></div>
            <div class="col-2 "  @onclick="@(() => ChangeColor("#aecbfa"))"  style="padding: 0;cursor: pointer"><h1 class="circle c6"></h1></div>
        </div>
    </Authorized>
</AuthorizeView>
@code {
    public string Name { get; set; }
    public string Content { get; set; }
    public string ColorSelected { get; set; }
    public List<Color> Colors{ get; set; }
    public List<Color> GetColors()
    {
        ServiceDrive service = new ServiceDrive();
        Colors = new List<Color>();
        Data data = service.ListFiles();
        if (data == null) 
        {
            return new List<Color>();
        }
        Colors = data.Colors;
        return data.Colors;
    }
    public void ChangeColor(string color)
    {
        ColorSelected = color;
    }
    public void SaveNote(bool archived)
    {
        if (Name.Equals(""))
        {
            return;
        }
        if (Content.Equals(""))
        {
            return;
        }
        if (ColorSelected == null)
        {
            ColorSelected = "white";
        }
        Color color = new Color { Name="",HexCode=ColorSelected};
        int archive = archived ? 1 : 0;
        Note note = new Note
        {
             Color= color,
             Title = Name,
             Content=Content,
             Archived=archive
        };
        ServiceDrive service = new ServiceDrive();
        Models.Data data = service.ListFiles();
        if (data != null) 
        {
            data.Notes.Add(note);
            DataResponse response = service.UpdateList(data);
            if (response.StatusCod == 200)
            {
                uriHelper.NavigateTo("/", forceLoad: true);
            }
        }
    }
}
